{"componentChunkName":"component---src-templates-blog-post-js","path":"/use-google-java-format/","result":{"data":{"site":{"siteMetadata":{"title":"大大大大大"}},"markdownRemark":{"id":"ba4adf5a-d94f-5967-bf88-c61287550e0f","excerpt":"google-java-format是一款优秀的 Java 源代码格式化工具，使用的是Google Java Style，下面让我们来看一下怎么配置。 配置项目 使用了 Gradle 的 Kotlin DSL，我们可以在 build.gradle.kts…","html":"<p><a href=\"https://github.com/google/google-java-format\">google-java-format</a>是一款优秀的 Java 源代码格式化工具，使用的是<a href=\"https://google.github.io/styleguide/javaguide.html\">Google Java Style</a>，下面让我们来看一下怎么配置。</p>\n<h3>配置项目</h3>\n<p>使用了 Gradle 的 Kotlin DSL，我们可以在 build.gradle.kts 里面加入这两项配置：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">plugins {\n  id(&quot;com.diffplug.spotless&quot;) version &quot;6.7.0&quot;\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  spotless {\n    java {\n      target(&quot;src/*/java/**/*.java&quot;)\n      importOrder()\n      removeUnusedImports()\n      trimTrailingWhitespace()\n      indentWithSpaces(4)\n      endWithNewline()\n      googleJavaFormat()\n    }\n  }</code></pre></div>\n<p>我们不想在每个子项目里面都重复配置，所以可以在 <code class=\"language-text\">parent</code> build.gradle.kts 里面这样配置：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">plugins {\n  id(&quot;com.diffplug.spotless&quot;) version &quot;6.7.0&quot;\n}\n\nallprojects {\n  apply(plugin = &quot;com.diffplug.spotless&quot;)\n\n  afterEvaluate {\n    val spotless = tasks.findByName(&quot;spotlessApply&quot;)\n      if (spotless != null) {\n        tasks.withType&lt;JavaCompile&gt; {\n          finalizedBy(spotless)\n        }\n    }\n  }\n\n  spotless {\n    java {\n      target(&quot;src/*/java/**/*.java&quot;)\n      importOrder()\n      removeUnusedImports()\n      trimTrailingWhitespace()\n      indentWithSpaces(4)\n      endWithNewline()\n      googleJavaFormat()\n    }\n  }\n}</code></pre></div>\n<p>其中 <code class=\"language-text\">afterEvaluate</code> 一项配置使得每当我们测试·、编译的时候自动运行格式化，更好地保持保证代码一直处于格式化的状态。</p>\n<h3>配置编辑器</h3>\n<p>这里使用了 Emacs 编辑器，需要加载 <a href=\"https://raw.githubusercontent.com/google/google-java-format/master/core/src/main/scripts/google-java-format.el\">google-java-format.el</a>，将文件下载下来放入 Emacs 可以正常加载的目录。</p>\n<p>需要下载或者编译 google-java-format，可以直接从 <a href=\"https://github.com/google/google-java-format/releases\">发布页面</a> 进行下载。下载后将如下脚本保存成名为 <code class=\"language-text\">google-java-format</code> 的文件，并执行 chmod +x google-java-format。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#!/bin/bash\nexec java -jar &quot;/path/to/google-java-format.jar&quot; &quot;$@&quot;</code></pre></div>\n<p>还需要配置 emacs，一个典型的配置如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  (require &#39;google-java-format)\n  (setq google-java-format-executable &quot;/path/to/google-java-format&quot;)\n    (add-hook &#39;java-mode-hook (lambda ()\n                              (add-hook &#39;before-save-hook &#39;google-java-format-buffer nil t)\n                              (global-set-key (kbd &quot;C-c SPC&quot;) &#39;google-java-format)))</code></pre></div>\n<p>配置了保存时自动格式化，并绑定了一个快捷键。</p>\n<p>Emacs 编辑器在 <code class=\"language-text\">java-mode</code> 的缩进可能是 4，为了让写代码的时候更舒服一点，如果不想全局配置，可以将如下配置写入项目根目录的 <code class=\"language-text\">.dir-locals.el</code> 文件：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">((java-mode\n  (c-basic-offset . 2)\n  (tab-width . 2)\n  (indent-tabs-mode . nil)))</code></pre></div>\n<h3>Native Image 编译</h3>\n<p>前面直接使用 Java 执行 jar 文件，会明显感觉到延迟。如果在意的话，可以使用 <a href=\"https://www.graalvm.org/22.1/reference-manual/native-image/\">Native Image</a> 编译。</p>\n<p>安装 GraalVM 后将其配置到 <code class=\"language-text\">JAVA_HOME</code>，并执行 <code class=\"language-text\">gu install native-image</code> 来安装 <code class=\"language-text\">Native Image</code>。</p>\n<p>然后下载 google-java-format 源码并编译：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git clone git@github.com:google/google-java-format.git\ncd google-java-format\nmvn -Pnative -DskipTests package</code></pre></div>\n<p>编译完成后从 target 目录将 <code class=\"language-text\">google-java-format</code> 可执行文件复制到合适的路径，配置到编辑器中即可。为了适配不同的环境，我将 MacOS 上编译的文件命名为 google-java-format.macos，还是用脚本启动。</p>\n<p>脚本大体是这个样子：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#!/bin/bash\n\n# export JAVA_HOME=...\nexport BASE_DIR=&quot;$( cd &quot;$( dirname &quot;${BASH_SOURCE[0]}&quot; )&quot; &amp;&amp; pwd )&quot;\n\nif [ $(uname) == &#39;Darwin&#39; ];\nthen\n    ${BASE_DIR}/google-java-format.macos &quot;$@&quot;\nelse\n    exec &quot;${JAVA_HOME}/bin/java&quot; -jar &quot;${BASE_DIR}/google-java-format-1.15.0-all-deps.jar&quot; &quot;$@&quot;\nfi</code></pre></div>\n<p>可以明显感受到命令执行速度的提升。</p>","frontmatter":{"title":"使用 google-java-format","date":"June 11, 2022","description":"使用 google-java-format 格式化 Java 代码"}},"previous":{"fields":{"slug":"/write-blog-with-github-dev/"},"frontmatter":{"title":"用 github.dev 写博客"}},"next":null},"pageContext":{"id":"ba4adf5a-d94f-5967-bf88-c61287550e0f","previousPostId":"2a91eee9-ac93-534e-a29a-df00bc3bfd3e","nextPostId":null}},"staticQueryHashes":["2841359383","658381229"]}