{"componentChunkName":"component---src-templates-blog-post-js","path":"/write-and-publish-blog-with-gatsby-and-github-workflow/","result":{"data":{"site":{"siteMetadata":{"title":"大大大大大"}},"markdownRemark":{"id":"d9a02f9d-f662-5976-9ead-86b32342932e","excerpt":"刚重新把在 github 上的 private 掉的博客的仓库放了出来。 之前用的也是 gatsby，自己改出来了一个 gatsby-starter-blog-typescript。\n现在不想升级那个年久失修的 typescript 版本的代码了，直接清空重新走了一遍流程，更新到最新版官方博客模板 gatsby…","html":"<p>刚重新把在 github 上的 private 掉的<a href=\"/\">博客</a>的<a href=\"https://github.com/liuchong/myblog\">仓库</a>放了出来。</p>\n<p>之前用的也是 <a href=\"https://www.gatsbyjs.com/\">gatsby</a>，自己改出来了一个 <a href=\"https://github.com/liuchong/gatsby-starter-blog-typescript\">gatsby-starter-blog-typescript</a>。\n现在不想升级那个年久失修的 typescript 版本的代码了，直接清空重新走了一遍流程，更新到最新版官方博客模板 <a href=\"https://github.com/gatsbyjs/gatsby-starter-blog\">gatsby-starter-blog</a>。</p>\n<h3>安装 gatsby</h3>\n<p>详细过程可以参考官方文档 <a href=\"https://www.gatsbyjs.com/tutorial/\">https://www.gatsbyjs.com/tutorial/</a>，我这里有完整的环境，只需要运行命令：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g gatsby-cli\ngatsby new myblog https://github.com/gatsbyjs/gatsby-starter-blog</code></pre></div>\n<p>运行完了，把一些文件里面按照需要改一下就可以使用了：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">content/assets/\nsrc/components/bio.js\ngatsby-config.js</code></pre></div>\n<p>预览一下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby develop</code></pre></div>\n<p>执行完命令打开 <a href=\"http://localhost:8000/\">http://localhost:8000/</a> 可以看到几个示范文章已经在那里了。</p>\n<p>我还在 <code class=\"language-text\">static</code> 目录放置了一些文件，它们会被原封不动的复制到网站目录。\n比如 <code class=\"language-text\">CNAME</code> 用来在 github pages 绑定域名，后面会发布后就可以用到。</p>\n<p>安装完后，可以创建一个 github 仓库，我这里就是 <code class=\"language-text\">myblog</code>，把代码提交后推到仓库里。</p>\n<h3>写文章</h3>\n<p>我们看到，在 <code class=\"language-text\">content/blog/</code> 有一些目录，里面分别有一个 index.md，这就是文章了。比如我们参观一下这个 <code class=\"language-text\">hello-world</code>：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">---\ntitle: Hello World\ndate: &quot;2015-05-01T22:12:03.284Z&quot;\ndescription: &quot;Hello World&quot;\n---\n\nThis is my first post on my new fake blog! How exciting!\n... 此处省略很多字</code></pre></div>\n<p>现在这些展示文章的任务就圆满完成了，我们愿意的话可以把它们删除。然后比着它们的格式，打开咱喜欢的编辑器，写起来吧！</p>\n<p>安装一个工具 <code class=\"language-text\">gh-pages</code> 尝试发布一下，进行观赏：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save gh-pages\nnpx gh-pages -b public -d public -r https://github.com/liuchong/myblog.git</code></pre></div>\n<p>上面命令用 gh-pages 工具把 public 目录发到了 public 分支，更详细可参考 <a href=\"https://www.gatsbyjs.com/docs/how-gatsby-works-with-github-pages/\">https://www.gatsbyjs.com/docs/how-gatsby-works-with-github-pages/</a>。\n在项目设置里面设置 github pages 分支，点击显示出来的那个链接博客就出来了。</p>\n<p>到目前为止，还不错是吧！</p>\n<h3>设置 workflow</h3>\n<p>你看，写完有一步发布过程，挺麻烦的；而且什么时候没有环境或者甚至只有一个浏览器，那就发布不了了。</p>\n<p>幸亏有 github actions，用上它就方便多了。</p>\n<p>我直接把 workflow 配置文件 <code class=\"language-text\">.github/workflows/publish.yml</code> 贴到这里，假设源码提交到了 <code class=\"language-text\">master</code> 分支：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">name: Publish\n\non:\n  push:\n    branches:\n      - master\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v1\n      - name: Publish\n        run: |\n          git config user.email ${{github.actor}}@users.noreply.github.com\n          git config user.name ${{github.actor}}\n          npm install\n          npx gatsby build\n          npx gh-pages -b public -d public -r https://${{ secrets.PUBLISH }}@github.com/${{ github.repository }}</code></pre></div>\n<p>要注意的是 <code class=\"language-text\">secrets.PUBLISH</code> 这个要手动在 <a href=\"https://github.com/settings/tokens\">https://github.com/settings/tokens</a> 创建 token，\n然后再到项目里面，比如我就是在 <a href=\"https://github.com/liuchong/myblog/settings/secrets/actions\">https://github.com/liuchong/myblog/settings/secrets/actions</a>，添加一个 secrets 项，\n<code class=\"language-text\">Name</code>那项就填的 <code class=\"language-text\">PUBLISH</code>。</p>\n<p>说明一下，这个链接 <a href=\"https://docs.github.com/cn/free-pro-team@latest/actions/reference/authentication-in-a-workflow\">https://docs.github.com/cn/free-pro-team@latest/actions/reference/authentication-in-a-workflow</a> 上面还有个 <code class=\"language-text\">secrets.GITHUB_TOKEN</code>，\n说是自动创建的，不过我没有使用成功。</p>\n<p>如果发布有问题，可以试着手动执行一下命令测试，注意 <code class=\"language-text\">***</code> 改成自己的 secret：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gh-pages -b public -d public -r https://***@github.com/liuchong/myblog.git</code></pre></div>\n<h3>从网页发布</h3>\n<p>到仓库页面 <a href=\"https://github.com/liuchong/myblog/tree/master/content/blog\">https://github.com/liuchong/myblog/tree/master/content/blog</a> 点击 <strong>Add file -> Create new file</strong> 然后填入 <code class=\"language-text\">my-title/index.md</code>，写就行了。</p>\n<p>我这篇博客就是在网页上面写的，其中 <code class=\"language-text\">date</code> 条目我手工写的，所以简化了一下，像 <code class=\"language-text\">date: &quot;2020-12-17&quot;</code> 这样也是可以的，不用那么精确。</p>\n<p>不过还是不推荐直接在网页上面写，我写完后点击了一下 preview，又点回编辑界面时失败了一下，还以为文章没了，吓坏了 👀</p>","frontmatter":{"title":"用 gatsby 和 github workflow 写博客","date":"December 17, 2020","description":"用 gatsby 和 github workflow 写博客，支持在在线编辑，自动发布"}},"previous":{"fields":{"slug":"/simple-snowflake-in-go-and-rust/"},"frontmatter":{"title":"simple snowflake in go and rust"}},"next":null},"pageContext":{"id":"d9a02f9d-f662-5976-9ead-86b32342932e","previousPostId":"f0d42108-fd27-54b0-8217-2712636629a4","nextPostId":null}},"staticQueryHashes":["2841359383","658381229"]}